# GitHub Actions - Fixed untuk file di root directory
name: Extract Files from Root
on:
  workflow_dispatch:
    inputs:
      source_directory:
        description: 'Source directory path'
        required: true
        default: '.'
        type: string
      destination_directory:
        description: 'Destination directory path'
        required: true
        default: './extracted'
        type: string
      specific_file:
        description: 'Specific file to extract (optional, e.g., tutorial.zip)'
        required: false
        default: ''
        type: string

jobs:
  unpack-files:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install extraction tools
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip p7zip-full unrar
        
    - name: List all archive files in root
      run: |
        echo "=== Archive files found in root ==="
        ls -la *.zip *.tar *.tar.gz *.7z *.rar 2>/dev/null || echo "No archive files with these extensions found"
        echo ""
        echo "=== All files in current directory ==="
        ls -la
        
    - name: Create destination directory
      run: |
        mkdir -p "${{ github.event.inputs.destination_directory }}"
        echo "Created destination directory: ${{ github.event.inputs.destination_directory }}"
        
    - name: Extract specific file (if provided)
      if: ${{ github.event.inputs.specific_file != '' }}
      run: |
        SPECIFIC_FILE="${{ github.event.inputs.specific_file }}"
        DEST_DIR="${{ github.event.inputs.destination_directory }}"
        
        if [ -f "$SPECIFIC_FILE" ]; then
          echo "Extracting specific file: $SPECIFIC_FILE"
          case "$SPECIFIC_FILE" in
            *.zip)
              unzip -q "$SPECIFIC_FILE" -d "$DEST_DIR"
              echo "‚úÖ Successfully extracted $SPECIFIC_FILE"
              ;;
            *.tar.gz|*.tgz)
              tar -xzf "$SPECIFIC_FILE" -C "$DEST_DIR"
              echo "‚úÖ Successfully extracted $SPECIFIC_FILE"
              ;;
            *.tar)
              tar -xf "$SPECIFIC_FILE" -C "$DEST_DIR"
              echo "‚úÖ Successfully extracted $SPECIFIC_FILE"
              ;;
            *.7z)
              7z x "$SPECIFIC_FILE" -o"$DEST_DIR"
              echo "‚úÖ Successfully extracted $SPECIFIC_FILE"
              ;;
            *.rar)
              unrar x "$SPECIFIC_FILE" "$DEST_DIR/"
              echo "‚úÖ Successfully extracted $SPECIFIC_FILE"
              ;;
            *)
              echo "‚ùå Unsupported file format: $SPECIFIC_FILE"
              exit 1
              ;;
          esac
        else
          echo "‚ùå File not found: $SPECIFIC_FILE"
          exit 1
        fi
        
    - name: Extract all ZIP files (if no specific file)
      if: ${{ github.event.inputs.specific_file == '' }}
      run: |
        DEST_DIR="${{ github.event.inputs.destination_directory }}"
        
        for zipfile in *.zip; do
          if [ -f "$zipfile" ]; then
            echo "Extracting ZIP: $zipfile"
            unzip -q "$zipfile" -d "$DEST_DIR"
            echo "‚úÖ Extracted: $zipfile"
          fi
        done
        
    - name: Extract all TAR files (if no specific file)
      if: ${{ github.event.inputs.specific_file == '' }}
      run: |
        DEST_DIR="${{ github.event.inputs.destination_directory }}"
        
        for tarfile in *.tar *.tar.gz *.tgz; do
          if [ -f "$tarfile" ]; then
            echo "Extracting TAR: $tarfile"
            tar -xf "$tarfile" -C "$DEST_DIR"
            echo "‚úÖ Extracted: $tarfile"
          fi
        done
        
    - name: Extract all 7Z files (if no specific file)
      if: ${{ github.event.inputs.specific_file == '' }}
      run: |
        DEST_DIR="${{ github.event.inputs.destination_directory }}"
        
        for sevenzfile in *.7z; do
          if [ -f "$sevenzfile" ]; then
            echo "Extracting 7Z: $sevenzfile"
            7z x "$sevenzfile" -o"$DEST_DIR"
            echo "‚úÖ Extracted: $sevenzfile"
          fi
        done
        
    - name: Extract all RAR files (if no specific file)
      if: ${{ github.event.inputs.specific_file == '' }}
      run: |
        DEST_DIR="${{ github.event.inputs.destination_directory }}"
        
        for rarfile in *.rar; do
          if [ -f "$rarfile" ]; then
            echo "Extracting RAR: $rarfile"
            unrar x "$rarfile" "$DEST_DIR/"
            echo "‚úÖ Extracted: $rarfile"
          fi
        done
        
    - name: Show extraction results
      run: |
        DEST_DIR="${{ github.event.inputs.destination_directory }}"
        echo ""
        echo "=== EXTRACTION COMPLETED ==="
        echo "Destination directory: $DEST_DIR"
        echo ""
        
        if [ -d "$DEST_DIR" ]; then
          echo "üìÅ Contents of $DEST_DIR:"
          find "$DEST_DIR" -type f | head -30
          echo ""
          echo "üìä Statistics:"
          echo "Total files extracted: $(find "$DEST_DIR" -type f | wc -l)"
          echo "Total directories: $(find "$DEST_DIR" -type d | wc -l)"
          echo "Total size: $(du -sh "$DEST_DIR" | cut -f1)"
        else
          echo "‚ùå Destination directory not found!"
        fi
        
    - name: Upload extracted files as artifact
      uses: actions/upload-artifact@v4
      with:
        name: extracted-files
        path: ${{ github.event.inputs.destination_directory }}
        retention-days: 30

---
# Simple version - Khusus untuk tutorial.zip di root
name: Extract Tutorial ZIP
on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  extract-tutorial:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Extract tutorial.zip
      run: |
        if [ -f "tutorial.zip" ]; then
          echo "Found tutorial.zip, extracting..."
          mkdir -p extracted
          unzip -q tutorial.zip -d extracted/
          echo "‚úÖ tutorial.zip extracted successfully!"
          
          echo "üìÅ Extracted contents:"
          find extracted/ -type f
          
          echo "üìä Total files: $(find extracted/ -type f | wc -l)"
        else
          echo "‚ùå tutorial.zip not found in root directory"
          ls -la
        fi
        
    - name: List extracted files
      run: |
        if [ -d "extracted" ]; then
          echo "=== EXTRACTED FILES ==="
          tree extracted/ || find extracted/ -type f | sort
        fi
        
    - name: Upload extracted files
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: tutorial-extracted
        path: extracted/

---
# Local script version untuk testing
#!/bin/bash
# extract-local.sh

echo "=== Local File Extractor ==="

# Check current directory
echo "Current directory: $(pwd)"
echo ""

# List available archives
echo "Available archive files:"
ls -la *.zip *.tar *.tar.gz *.7z *.rar 2>/dev/null || echo "No archive files found"
echo ""

# Default settings
SOURCE_DIR="."
DEST_DIR="./extracted"

# Create destination directory
mkdir -p "$DEST_DIR"
echo "Created destination directory: $DEST_DIR"

# Extract files
extracted_count=0

for file in *.zip; do
  if [ -f "$file" ]; then
    echo "Extracting ZIP: $file"
    unzip -q "$file" -d "$DEST_DIR"
    echo "‚úÖ Extracted: $file"
    ((extracted_count++))
  fi
done

for file in *.tar *.tar.gz *.tgz; do
  if [ -f "$file" ]; then
    echo "Extracting TAR: $file"
    tar -xf "$file" -C "$DEST_DIR"
    echo "‚úÖ Extracted: $file"
    ((extracted_count++))
  fi
done

for file in *.7z; do
  if [ -f "$file" ]; then
    echo "Extracting 7Z: $file"
    7z x "$file" -o"$DEST_DIR"
    echo "‚úÖ Extracted: $file"
    ((extracted_count++))
  fi
done

echo ""
echo "=== SUMMARY ==="
echo "Files processed: $extracted_count"
if [ $extracted_count -gt 0 ]; then
  echo "üìÅ Extracted to: $DEST_DIR"
  echo "üìä Total extracted files: $(find "$DEST_DIR" -type f | wc -l)"
  echo ""
  echo "Contents preview:"
  find "$DEST_DIR" -type f | head -10
else
  echo "No archive files were processed."
fi